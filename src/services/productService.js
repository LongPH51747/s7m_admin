import axios from "axios";

const API_URL = 'http://192.168.110.35:3000/products';

// const productService = {    
//     /**
//     * L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
//     * @returns {Promise<Array>} Danh s√°ch s·∫£n ph·∫©m
//     */
//     getAllProducts: async () => {
//         try {
//             const response = await axios.get(`${API_BASE_URL}/products`);
//             return response.data;
//         } catch (error) {
//             console.error("L·ªói khi l·∫•y s·∫£n ph·∫©m:", error);
//             throw error;
//         }
//     },

//     /**
//     * L·∫•y chi ti·∫øt s·∫£n ph·∫©m theo ID
//     * @param {number|string} id - ID s·∫£n ph·∫©m
//     * @returns {Promise<Object>} Th√¥ng tin s·∫£n ph·∫©m v√† c√°c bi·∫øn th·ªÉ
//     */
//     getProductById: async (id) => {
//         try {
//             const [productRes, variantsRes] = await Promise.all([
//                 axios.get(`${API_BASE_URL}/products/${id}`),
//                 axios.get(`${API_BASE_URL}/detailProduct?ID_Product=${id}`)
//             ]);

//             return {
//                 ...productRes.data,
//                 variantsRes: variantsRes.data
//             };

//         } catch (error) {
//             console.error("L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m:", error);
//             throw error;
//         }
//     },

//     /**
//    * L·∫•y c√°c bi·∫øn th·ªÉ c·ªßa s·∫£n ph·∫©m
//    * @param {number|string} productId - ID s·∫£n ph·∫©m
//    * @returns {Promise<Array>} Danh s√°ch bi·∫øn th·ªÉ
//    */
//   getVariantsByProductId: async (productId) => {
//     try {
//         const response = await axios.get(`${API_BASE_URL}/detailPrduct?ID_Product=${productId}`);
//         return response.data;
//     } catch (error) {
//         console.error("L·ªói khi l·∫•y bi·∫øn th·ªÉ s·∫£n ph·∫©m:", error);
//         throw error;
//     }
//   }

// };

// export default productService;

/*
// ∆Øu ƒëi·ªÉm t·ª´ng phi√™n b·∫£n
// Phi√™n b·∫£n 1 (OOP Style)
// ‚úÖ T√≠ch h·ª£p nhi·ªÅu API li√™n quan v√†o m·ªôt service
// ‚úÖ T·ªëi ∆∞u request b·∫±ng Promise.all (trong getProductById)
// ‚úÖ D·ªÖ m·ªü r·ªông khi th√™m c√°c ph∆∞∆°ng th·ª©c m·ªõi
// ‚úÖ Code g·ªçn g√†ng khi c√≥ nhi·ªÅu API c·∫ßn g·ªçi c√πng l√∫c

// üìå Ph√π h·ª£p khi:

// C·∫ßn l·∫•y c·∫£ th√¥ng tin s·∫£n ph·∫©m + bi·∫øn th·ªÉ

// Mu·ªën ƒë√≥ng g√≥i logic API v√†o m·ªôt service duy nh·∫•t

// Phi√™n b·∫£n 2 (Functional Style)
// ‚úÖ ƒê∆°n gi·∫£n, d·ªÖ hi·ªÉu
// ‚úÖ Ph√π h·ª£p Redux Toolkit (v√¨ RTK th∆∞·ªùng d√πng h√†m ƒë·ªôc l·∫≠p)
// ‚úÖ Linh ho·∫°t khi ch·ªâ c·∫ßn m·ªôt v√†i API

// üìå Ph√π h·ª£p khi:

// Ch·ªâ c·∫ßn c√°c API c∆° b·∫£n

// D√πng v·ªõi Redux Toolkit ho·∫∑c React Context */

// export const getProducts = async () => {
//     try {
//         const response = await axios.get(`${API_BASE_URL}/products`);
//         return response.data;
//     } catch (error) {
//         console.error('Error fetching products:', error);
//         throw error;
//     }
// };

// export const getProductById = async (id) => {
//     try {
//         const response = await axios.get(`${API_BASE_URL}/products/${id}`);
//         return response.data;
//     }catch(error) {
//         console.error(`Error fetching product ${id}:`, error);
//         throw error;
//     }
// }


// For classic Redux
export const fetchProducts = async () => {
    const response = await axios.get(API_URL);
    console.log("Products fetched successfully:", response.data);
    return response.data;
};

export const fetchProductById = async (id) => {
    const response = await axios.get(`${API_URL}/${id}`);
    console.log(`Product with ID ${id} fetched successfully:`, response.data);
    return response.data;
}

// For Redux Toolkit (createAsyncThunk)
export const fetchProductsRTK = axios.get(API_URL).then(res => res.data);
export const fetchProductByIdRTK = (id) => axios.get(`${API_URL}/${id}`).then(res => res.data);