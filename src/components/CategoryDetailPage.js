import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { getProductsByCategoryId } from "../services/productsService";
import { getAllCategories } from "../services/categoryService";

const CategoryDetailPage = () => {
  const { categorySlug } = useParams(); // üëà ƒê√∫ng t√™n param ·ªü route

  const [products, setProducts] = useState([]);
  const [categoryName, setCategoryName] = useState("");
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true);
        setError("");

        if (!categorySlug) {
          throw new Error("‚ùå Thi·∫øu slug danh m·ª•c tr√™n URL.");
        }

        const categories = await getAllCategories();

        if (!Array.isArray(categories) || categories.length === 0) {
          throw new Error("‚ùå Kh√¥ng c√≥ danh m·ª•c n√†o.");
        }

        const category = categories.find(
          (c) =>
            typeof c.slug === "string" &&
            c.slug.toLowerCase() === categorySlug.toLowerCase()
        );

        if (!category || !category._id) {
          throw new Error("‚ùå Kh√¥ng t√¨m th·∫•y danh m·ª•c ho·∫∑c thi·∫øu _id.");
        }

        setCategoryName(category.name);

        const productList = await getProductsByCategoryId(category._id);

        if (!Array.isArray(productList)) {
          throw new Error("‚ùå D·ªØ li·ªáu s·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá.");
        }

        setProducts(productList);
      } catch (err) {
        console.error(err);
        setError(err.message || "‚ùå ƒê√£ x·∫£y ra l·ªói.");
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, [categorySlug]);

  if (loading) return <p>üîÑ ƒêang t·∫£i d·ªØ li·ªáu...</p>;

  if (error) {
    return (
      <p className="text-red-500 flex items-center gap-2">
        ‚ùå {error}
      </p>
    );
  }

  return (
    <div className="p-4">
      <h2 className="text-xl font-bold mb-4">
        üìÇ S·∫£n ph·∫©m thu·ªôc danh m·ª•c: {categoryName}
      </h2>

      {products.length === 0 ? (
        <p>üö´ Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o.</p>
      ) : (
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          {products.map((p) => (
            <div
              key={p._id}
              className="border p-2 rounded shadow text-center"
            >
              <img
                src={p.image || "https://via.placeholder.com/150"}
                alt={p.name || "S·∫£n ph·∫©m"}
                className="w-full h-40 object-cover mb-2"
              />
              <h3 className="font-medium">{p.name || "T√™n s·∫£n ph·∫©m"}</h3>
              <p className="text-gray-500">
                {p.price
                  ? `${Number(p.price).toLocaleString()} ƒë`
                  : "Ch∆∞a c√≥ gi√°"}
              </p>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default CategoryDetailPage;
